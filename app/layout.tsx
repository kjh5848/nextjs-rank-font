import { cookies } from 'next/headers';
import { StoreProvider } from "@/store/provider/StoreProvider";
import AuthInitializer from "@/components/auth/AuthInitializer";
import "@/styles/global.css"

export const metadata = {
  title: 'Next.js',
  description: 'Generated by Next.js',
}

// 서버에서 사용자 정보 가져오기
async function getUserFromSession() {
  const cookieStore = cookies();
  const sessionCookie = (await cookieStore).get('connect.sid');
  
  if (!sessionCookie) return null;
  
  try {
    const response = await fetch(`${process.env.NEXT_PUBLIC_API_URL || 'http://localhost:8081'}/v1/auth/info`, {
      headers: {
        Cookie: `${sessionCookie.name}=${sessionCookie.value}`,
      },
      cache: 'no-store'
    });
    
    if (!response.ok) return null;
    
    const data = await response.json();
    return data.code === 0 && data.data?.user ? data.data.user : null;
  } catch (error) {
    console.error('Auth check error:', error);
    return null;
  }
}

export default async function RootLayout({
  children,
}: {
  children: React.ReactNode
}) {
  // 서버에서 사용자 정보 가져오기
  const user = await getUserFromSession();
  
  return (
    <html lang="ko">
      <body className="">
        <StoreProvider>
          {/* 서버에서 가져온 사용자 정보를 클라이언트 상태로 초기화 */}
          <AuthInitializer user={user} />
          {children}
        </StoreProvider>
      </body>
    </html>
  );
}
